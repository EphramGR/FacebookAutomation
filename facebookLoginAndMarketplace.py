# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

from selenium.webdriver.firefox.options import Options

import time

from selenium.webdriver.common.action_chains import ActionChains

options = Options()
options.binary_location = r'C:\Program Files\Mozilla Firefox\firefox.exe'
driver = webdriver.Firefox(executable_path=r'C:\Program Files (x86)\geckodriver.exe', firefox_options=options)


def login():
  driver.get("https://www.facebook.com/")
  driver.set_window_size(1527, 869)
  driver.find_element(By.ID, "email").send_keys("marhpe36@gmail.com")
  driver.find_element(By.ID, "pass").click()
  driver.find_element(By.ID, "pass").send_keys("HrbvK2piw410ofLm")
  #I had to change this to find element by name because the ID changed every time
  driver.find_element(By.NAME, "login").click()

def gotoMarketplace():
  #I oridginaly tried to do this by getting the element by ID, however, the ID was randomly generated. 
  #So instead I used my knowledge from the Selenium tutorials I watched to get the element by text. This way I do not need o know the name, class, id, etc. I also added this wait command format from the selenium website 
  #(https://selenium-python.readthedocs.io/waits.html) so that it will wait until the page loads before trying to find that element by text. 
  try:
    market = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.LINK_TEXT, "Marketplace"))
    )
    market.click()

  except:
    driver.quit()



login()

gotoMarketplace()